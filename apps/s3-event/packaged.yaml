AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Globals:
  Function:
    Timeout: 10
Parameters:
  BucketName:
    Type: String
    Default: com.awsdhenton.s3.event.testbucket
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: BucketName
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
              - Name: prefix
                Value: test/
              - Name: suffix
                Value: .txt
          Function:
            Fn::GetAtt:
            - S3EventFunction
            - Arn
  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: S3EventFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${BucketName}
  S3EventFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      RoleName:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - S3EventFunctionRole
          - '-'
          - Ref: AWS::Region
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W28
          reason: Resource name validated and found to pose no risk to updates that
            require replacement of this resource.
  S3EventPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:CreateLogGroup
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
        - Effect: Allow
          Action:
          - s3:Get*
          Resource:
          - arn:aws:s3:::*
      PolicyName:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - S3EventPolicy
      Roles:
      - Ref: S3EventFunctionRole
  S3EventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sam.awsdhenton.com.bucket/2c106cd60b7f47236ae23f6e4dc96ca1
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      FunctionName: s3Events
      Timeout: 10
      Role:
        Fn::GetAtt:
        - S3EventFunctionRole
        - Arn
Outputs:
  S3EventFunction:
    Description: S3 Events Lambda Function ARN
    Value:
      Fn::GetAtt:
      - S3EventFunction
      - Arn
